for (i in 0:(n_groups - 1)) {
left = courses_sorted[1] + i * hist_step
right = left + hist_step
group = subset(data[,2], left <= courses
& (courses < right | i == n_groups - 1 & courses <= right))
group_table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
group_table
# Task 4
v = length(courses) - 2
cor_coef = cor(courses, data[,2])
cor_coef
# t-value < 2.583
cor_level = abs(cor_coef) * sqrt(v / (1 - cor_coef ^ 2))
cor_level
# Task 5
abline(lm(data[,2] ~ data[,1]))
data = read.table('./text.txt', col.names = c("course", "mean_income"),
dec = ',')
data
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(data, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
# Task 2
course_disp = var(data[,1])
# Task 2
course_disp = var(dat[,1])
course_stdev = sqrt(disp)
mean_course = mean(dat[,1])
rows = paste("(", mean_course - (1:3) * course_stdev, ", ",
mean_course + (1:3) * course_stdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
course_disp = dat[,1]
course_stdev = sqrt(disp)
mean_course = mean(dat[,1])
rows = paste("(", mean_course - (1:3) * course_stdev, ", ",
mean_course + (1:3) * course_stdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
course_stdev = sqrt(disp)
courseDisp = var(dat[,1])
courseStdev = sqrt(disp)
courseMean = mean(dat[,1])
rows = paste("(" ,courseMean - (1:3) * courseStdev, ", ",
courseMean + (1:3) * courseStdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = data[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmavalues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmavalues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
courses = data[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
# Task 3
n_groups = 1 + floor(log2(length(courses)))
n_groups
hist_range = max(courses) - min(courses)
# Task 3
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
View(data)
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = '.')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
dat = read.table('./text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
courseDisp = var(dat[,1])
courseStdev = sqrt(disp)
courseMean = mean(dat[,1])
rows = paste("(" ,courseMean - (1:3) * courseStdev, ", ",
courseMean + (1:3) * courseStdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = data[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
coefCor
x = length(courses) - 2
coefCor = cor(courses, as.numeric(dat[,2]))
coefCor
data = read.table('./data.txt', col.names = c("course", "mean_income"),
dec = ',')
data
# Task 1
plot(data, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
# Task 2
course_disp = var(data[,1])
dat = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
data = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
data
plot(data, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
data = read.table('./data.txt', col.names = c("course", "mean_income"),
dec = ',')
data = read.table('./text.txt', col.names = c("course", "mean_income"),
dec = ',')
data
plot(data, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
dat = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
courseDisp = var(dat[,1])
courseStdev = sqrt(disp)
courseMean = mean(dat[,1])
rows = paste("(" ,courseMean - (1:3) * courseStdev, ", ",
courseMean + (1:3) * courseStdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
dat = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
courseDisp = var(dat[,1])
courseStdev = sqrt(disp)
courseMean = mean(dat[,1])
rows = paste("(" ,courseMean - (1:3) * courseStdev, ", ",
courseMean + (1:3) * courseStdev, ")", sep = "")
rows
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(as.numeric(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, as.numeric(dat[,2]))
coefCor
levevCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
llevevCor
abline(lm(data[,2] ~ data[,1]))
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
levevlCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
levelCor
levelCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
levelCor
abline(lm(data[,2] ~ data[,1]))
abline(lm(dat[,2] ~ dat[,1]))
View(dat)
dat = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
dat = read.table('text.txt', col.names = c("X", "Y"),dec = ',')
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
courseDisp = var(dat[,1])
courseStdev = sqrt(disp)
courseMean = mean(dat[,1])
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(data[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(dat[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
coefCor
levelCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
levelCor
abline(lm(dat[,2] ~ dat[,1]))
courseDisp = var(dat[,1])
courseStdev = sqrt(courseDisp)
courseMean = mean(dat[,1])
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
courseDisp = var(dat[,1])
courseStdev = sqrt(courseDisp)
courseMean = mean(dat[,1])
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(dat[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
coefCor
levelCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
levelCor
abline(lm(dat[,2] ~ dat[,1]))
abline(lm(dat[,2] ~ dat[,1]))
dat
plot(dat, type='p', main='Корреляционное поле', xlab='X', ylab='Y')
courseDisp = var(dat[,1])
courseStdev = sqrt(courseDisp)
courseMean = mean(dat[,1])
table = rep(0, 3 * 4)
dim(table) = c(3, 4)
table = as.data.frame(table)
table
courses = dat[,1]
firstSigmaValues = subset(courses, ((courseMean - courseStdev) < courses)& (courses < (courseMean + courseStdev)))
secondSigmaValues = subset(courses, ((courseMean - 2 * courseStdev) < courses)& (courses < (courseMean + 2 * courseStdev)))
thirdSigmaValues = subset(courses, ((courseMean - 3 * courseStdev) < courses& courses < (courseMean + 3 * courseStdev)))
table
table[1, 1] = '(mean - sigma, mean + sigma)'
table[2, 1] = '(mean - 2sigma, mean + 2sigma)'
table[3, 1] = '(mean - 3sigma, mean + 3sigma)'
table[1, 2] = length(firstSigmaValues)
table[2, 2] = length(secondSigmaValues)
table[3, 2] = length(thirdSigmaValues)
table[1, 3] = table[1, 2] / length(courses)
table[2, 3] = table[2, 2] / length(courses)
table[3, 3] = table[3, 2] / length(courses)
table[1, 4] = 0.683
table[2, 4] = 0.954
table[3, 4] = 0.997
table
groups = 1 + floor(log2(length(courses)))
groups
range = max(courses) - min(courses)
step = range / groups
coursesSort = sort(courses)
table = rep(0, groups * 5)
dim(table) = c(groups, 5)
table = as.data.frame(table)
table
for (i in 0:(groups - 1)) {
left = coursesSort[1] + i * step
right = left + step
group = subset(dat[,2], left <= courses
& (courses < right | i == groups - 1 & courses <= right))
table[i + 1, 1:5] = c(left, right, length(group), sum(group), mean(group))
}
table
x = length(courses) - 2
coefCor = cor(courses, dat[,2])
coefCor
levelCor = abs(coefCor) * sqrt(x / (1 - coefCor ^ 2))
levelCor
abline(lm(dat[,2] ~ dat[,1]))

dat = read.table(file = "text.txt", dec = ",")
myts = ts(dat[,1], start = c(2018,1), end = c(2019,7), frequency = 12)
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
dat[,2] = movavg(dat[,1], 3, type = "s")
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2018,1), end = c(2019,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2018,1), end = c(2019,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
dat=read.table("text.txt")
buffer <-dat[,1]
dat[,1]<- dat[,2]
dat=read.table("text.txt",dec=',')
buffer <-dat[,1]
dat[,1]<- dat[,2]
dat=read.table("text.txt",dec=',')
buffer <-dat[,1] #свопаем местами столбцы
dat[,1]<- dat[,2]
dat=read.table("text.txt",dec=',')
buffer <-dat[,1]
dat[,1]<- dat[,2]
dat[,2]<-buffer
y <-dat[,2]
Average_Level_Of_A_Number_Of_Dynamics <- sum(y)/length(y)
t <- 1.96
buffer<-c(1:36)
for (i in 1:36) {
if(y[i]>Average_Level_Of_A_Number_Of_Dynamics) {
buffer[i] <- 1
} else {
buffer[i] <-0
}
}
count<-1
for (i in 2:36) {
if(buffer[i-1] != buffer[i]){
count <- count + 1
}
}
LeftEdge <-(length(y)+1-t*sqrt(length(y)-1))/2
RightEdeg <-(length(y)+1+t*sqrt(length(y)-1))/2
YAfterLiquefaction <-c(1:36)
YAfterLiquefaction[1]<- ((5*y[1]+2*y[2]-y[3])/6)
YAfterLiquefaction[36]<- ((5*y[36]+2*y[35]-y[34])/6)
for (i in 2:35) {
YAfterLiquefaction[i] <- (y[i-1]+y[i]+y[i+1])/3
}
a0<-mean(y)
n<-length(y)
time<- (1:n) - round(n/2)
time<- time- round((n:1)/n)
timeDat<- time*dat[,2]
time2<-time*time
a1<-sum(timeDat)/sum(time2)
dat[,2]<-y
plot(dat,col="red")
lines(dat, col="red")
dat[,2]<-YAfterLiquefaction
points(dat,col="green")
lines(dat, col="green")
points(dat[,1],a1*time+a0,col="blue")
lines(dat[,1],a1*time+a0,col="blue")

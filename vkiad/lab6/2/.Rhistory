dat1 = cbind(rnorm(20, 0 , 5 / 3), rnorm(20, 0 ,  5 /3))
dat2 = cbind(rnorm(10, 5 , 5 / 3), rnorm(10, 5 ,  5 /3))
dat = rbind(dat1, dat2)
cl = kmeans(scale(dat), 2)
sapply(1:2, function(i) cl$centers[,i] * sd(dat[,i]) + mean(dat[,i]))
n = length(dat[,1])
n.train = floor(n * 0.7)
n.test = n - n.train
idx.train = sample(1:n, n.train)
data.train = dat[idx.train, ]
idx.test = setdiff(1:n, idx.train)
data.test = dat[idx.test, ]
cl.train = factor(cl[["cluster"]][idx.train])
cl.test = factor(cl[["cluster"]][idx.test])
mod = qda(data.train, cl.train)
cl.test_est = predict(mod, data.test)$class
sum(cl.test_est != cl.test) / n.test
idx.wrong = idx.test[cl.test_est != cl.test]
plot(dat, col = c("blue", "green")[cl$cluster], pch = 20, cex = 2, xlab = "X", ylab = "Y", main = "Ulala_1")
legend("topleft", legend = c("1", "2"), fill = c("blue", "green"))
points(dat[idx.wrong, 1], dat[idx.wrong, 2], col = "red", pch = 4, cex = 2, lwd = 3)
points(dat[idx.train,],pch = 2, cex = 2)
idx.new = sample(1:n, n*0.2)
for (i in 1:length(idx.new)) {
if(cl[["cluster"]][idx.new[i]] == 1){
cl[["cluster"]][idx.new[i]] = 2}
else{
cl[["cluster"]][idx.new[i]] = 1
}
}
cl_train = factor(cl[["cluster"]][idx.train])
cl_test = factor(cl[["cluster"]][idx.test])
mod2 = qda(data.train, cl.train)
cl.test_est2 = predict(mod2, data.test)$class
sum(cl.test_est2 != cl.test) / n.test
idx.wrong2 = idx.test[cl.test_est2 != cl.test]
plot(dat, col = c("blue", "green")[cl$cluster], pch = 20, cex = 2, xlab = "X", ylab = "Y", main = "Ulala_2")
legend("topleft", legend = c("1", "2"), fill = c("blue", "green"))
points(dat[idx.wrong2, 1], dat[idx.wrong2, 2], col = "red", pch = 4, cex = 2, lwd = 3)
sum(cl.test_est2 != cl.test) / n.test
cl_test_est2 = predict(mod2, data.test)$class
mod2 = qda(data.train, cl.train)
library(MASS)
x1 = rnorm(10, mean=0, sd=8/3)
y1 = rnorm(10, mean=0, sd=8/3)
x2 = rnorm(20, mean=8, sd=8/3)
y2 = rnorm(20, mean=8, sd=8/3)
xy = cbind(c(x1, x2), c(y1, y2))
xy
n = 30
n_train = floor(0.7 * n)
n_test = n - n_train
idx_train = sample(1:n, n_train)
idx_test = (1:n)[!(1:n %in% idx_train)]
data_train = xy[idx_train,]
data_test = xy[idx_test,]
clusterization = kmeans(xy, 2)
clusterization_cluster = clusterization$cluster
clusterization_train = clusterization_cluster[idx_train]
clusterization_test = clusterization_cluster[idx_test]
mod = qda(data_train, clusterization_train)
clusterization_test_est = predict(mod, data_test)$class
sum(clusterization_test_est != clusterization_test) / n_test
idx = idx_test[clusterization_test_est != clusterization_test]
plot(xy, type="n")
points(data_train, pch=24, col=c("blue", "orange")[clusterization_train])
legend("topleft", legend=c("train1", "train2"), pch=24, col=c("blue", "orange"))
points(data_test, pch=21, col=c("blue", "orange")[clusterization_test])
legend("topleft", legend=c("train1", "train2", "test1", "test2"), pch=c(24, 24, 21, 21), col=c("blue", "orange"))
if (length(idx) == 1) {
points(xy[idx, 1], xy[idx, 2], col="red", pch=4)
} else {
points(xy[idx,], col="red", pch=4)
}
legend("topleft", legend=c("train1", "train2", "test1", "test2", "wrong"), pch=c(24, 24, 21, 21, 4),
col=c("blue", "orange", "blue", "orange", "red"))
idd = sample(1:n_train, 0.2 * n_train)
for (i in idd) {
clusterization_train[i] = ifelse(clusterization_train[i] == 1, 2, 1)
}
mod2 = qda(data_train, clusterization_train)
clusterization_test_est<-predict(mod2, data_test)$class
sum(clusterization_test_est != clusterization_test) / n_test
idx2 = idx_test[clusterization_test_est != clusterization_test]
plot(xy, type="n")
points(data_train, pch=24, col=c("blue", "orange")[clusterization_train])
legend("topleft", legend=c("train1", "train2"), pch=24, col=c("blue", "orange"))
points(data_test, pch=21, col=c("blue", "orange")[clusterization_test])
legend("topleft",legend=c("train1", "train2", "test1", "test2"), pch=c(24, 24, 21, 21),
col=c("blue", "orange", "blue", "orange"))
if (length(idx2) == 1) {
points(xy[idx2, 1], xy[idx2, 2], col="red", pch=4)
} else {
points(xy[idx2,], col="red", pch=4)
}
legend("topleft", legend=c("train1", "train2", "test1", "test2", "wrong"), pch=c(24, 24, 21, 21, 4),
col=c("blue", "orange", "blue", "orange", "red"))
